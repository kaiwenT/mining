<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="com.hust.mining.dao.mapper.IssueFileMapper">
	<resultMap id="BaseResultMap" type="com.hust.mining.model.IssueFile">
		<id column="file_id" jdbcType="VARCHAR" property="fileId" />
		<result column="file_name" jdbcType="VARCHAR" property="fileName" />
		<result column="source_type" jdbcType="VARCHAR" property="sourceType" />
		<result column="size" jdbcType="INTEGER" property="size" />
		<result column="line_number" jdbcType="INTEGER" property="lineNumber" />
		<result column="issue_id" jdbcType="VARCHAR" property="issueId" />
		<result column="upload_time" jdbcType="TIMESTAMP" property="uploadTime" />
		<result column="creator" jdbcType="VARCHAR" property="creator" />
	</resultMap>
	<resultMap extends="BaseResultMap" id="ResultMapWithBLOBs"
		type="com.hust.mining.model.IssueFile">
		<result column="content" jdbcType="LONGVARBINARY" property="content" />
	</resultMap>
	<sql id="Example_Where_Clause">
		<where>
			<foreach collection="oredCriteria" item="criteria" separator="or">
				<if test="criteria.valid">
					<trim prefix="(" prefixOverrides="and" suffix=")">
						<foreach collection="criteria.criteria" item="criterion">
							<choose>
								<when test="criterion.noValue">
									and ${criterion.condition}
								</when>
								<when test="criterion.singleValue">
									and ${criterion.condition} #{criterion.value}
								</when>
								<when test="criterion.betweenValue">
									and ${criterion.condition} #{criterion.value}
									and
									#{criterion.secondValue}
								</when>
								<when test="criterion.listValue">
									and ${criterion.condition}
									<foreach close=")" collection="criterion.value" item="listItem"
										open="(" separator=",">
										#{listItem}
									</foreach>
								</when>
							</choose>
						</foreach>
					</trim>
				</if>
			</foreach>
		</where>
	</sql>
	<sql id="Update_By_Example_Where_Clause">
		<where>
			<foreach collection="example.oredCriteria" item="criteria"
				separator="or">
				<if test="criteria.valid">
					<trim prefix="(" prefixOverrides="and" suffix=")">
						<foreach collection="criteria.criteria" item="criterion">
							<choose>
								<when test="criterion.noValue">
									and ${criterion.condition}
								</when>
								<when test="criterion.singleValue">
									and ${criterion.condition} #{criterion.value}
								</when>
								<when test="criterion.betweenValue">
									and ${criterion.condition} #{criterion.value}
									and
									#{criterion.secondValue}
								</when>
								<when test="criterion.listValue">
									and ${criterion.condition}
									<foreach close=")" collection="criterion.value" item="listItem"
										open="(" separator=",">
										#{listItem}
									</foreach>
								</when>
							</choose>
						</foreach>
					</trim>
				</if>
			</foreach>
		</where>
	</sql>
	<sql id="Base_Column_List">
		file_id, file_name, source_type, size, line_number,
		issue_id, upload_time,
		creator
	</sql>
	<sql id="Blob_Column_List">
		content
	</sql>
	<select id="selectByExampleWithBLOBs" parameterType="com.hust.mining.model.IssueFileExample"
		resultMap="ResultMapWithBLOBs">
		select
		<if test="distinct">
			distinct
		</if>
		'true' as QUERYID,
		<include refid="Base_Column_List" />
		,
		<include refid="Blob_Column_List" />
		from file
		<if test="_parameter != null">
			<include refid="Example_Where_Clause" />
		</if>
		<if test="orderByClause != null">
			order by ${orderByClause}
		</if>
		<if test="start !=0 or limit!=0">
			limit #{start},#{limit}
		</if>
	</select>
	<select id="selectByExample" parameterType="com.hust.mining.model.IssueFileExample"
		resultMap="BaseResultMap">
		select
		<if test="distinct">
			distinct
		</if>
		'true' as QUERYID,
		<include refid="Base_Column_List" />
		from file
		<if test="_parameter != null">
			<include refid="Example_Where_Clause" />
		</if>
		<if test="orderByClause != null">
			order by ${orderByClause}
		</if>
		<if test="start !=0 or limit!=0">
			limit #{start},#{limit}
		</if>
	</select>
	<select id="selectByPrimaryKey" parameterType="java.lang.String"
		resultMap="ResultMapWithBLOBs">
		select
		<include refid="Base_Column_List" />
		,
		<include refid="Blob_Column_List" />
		from file
		where file_id = #{fileId,jdbcType=VARCHAR}
	</select>
	<delete id="deleteByPrimaryKey" parameterType="java.lang.String">
		delete from file
		where file_id = #{fileId,jdbcType=VARCHAR}
	</delete>
	<delete id="deleteByExample" parameterType="com.hust.mining.model.IssueFileExample">
		delete from file
		<if test="_parameter != null">
			<include refid="Example_Where_Clause" />
		</if>
	</delete>
	<insert id="insert" parameterType="com.hust.mining.model.IssueFile">
		insert into file (file_id,
		file_name, source_type,
		size, line_number, issue_id,
		upload_time,
		creator, content
		)
		values (#{fileId,jdbcType=VARCHAR},
		#{fileName,jdbcType=VARCHAR},
		#{sourceType,jdbcType=VARCHAR},
		#{size,jdbcType=INTEGER}, #{lineNumber,jdbcType=INTEGER},
		#{issueId,jdbcType=VARCHAR},
		#{uploadTime,jdbcType=TIMESTAMP},
		#{creator,jdbcType=VARCHAR},
		#{content,jdbcType=LONGVARBINARY}
		)
	</insert>
	<insert id="insertSelective" parameterType="com.hust.mining.model.IssueFile">
		insert into file
		<trim prefix="(" suffix=")" suffixOverrides=",">
			<if test="fileId != null">
				file_id,
			</if>
			<if test="fileName != null">
				file_name,
			</if>
			<if test="sourceType != null">
				source_type,
			</if>
			<if test="size != null">
				size,
			</if>
			<if test="lineNumber != null">
				line_number,
			</if>
			<if test="issueId != null">
				issue_id,
			</if>
			<if test="uploadTime != null">
				upload_time,
			</if>
			<if test="creator != null">
				creator,
			</if>
			<if test="content != null">
				content,
			</if>
		</trim>
		<trim prefix="values (" suffix=")" suffixOverrides=",">
			<if test="fileId != null">
				#{fileId,jdbcType=VARCHAR},
			</if>
			<if test="fileName != null">
				#{fileName,jdbcType=VARCHAR},
			</if>
			<if test="sourceType != null">
				#{sourceType,jdbcType=VARCHAR},
			</if>
			<if test="size != null">
				#{size,jdbcType=INTEGER},
			</if>
			<if test="lineNumber != null">
				#{lineNumber,jdbcType=INTEGER},
			</if>
			<if test="issueId != null">
				#{issueId,jdbcType=VARCHAR},
			</if>
			<if test="uploadTime != null">
				#{uploadTime,jdbcType=TIMESTAMP},
			</if>
			<if test="creator != null">
				#{creator,jdbcType=VARCHAR},
			</if>
			<if test="content != null">
				#{content,jdbcType=LONGVARBINARY},
			</if>
		</trim>
	</insert>
	<select id="countByExample" parameterType="com.hust.mining.model.IssueFileExample"
		resultType="java.lang.Long">
		select count(*) from file
		<if test="_parameter != null">
			<include refid="Example_Where_Clause" />
		</if>
	</select>
	<update id="updateByExampleSelective" parameterType="map">
		update file
		<set>
			<if test="record.fileId != null">
				file_id = #{record.fileId,jdbcType=VARCHAR},
			</if>
			<if test="record.fileName != null">
				file_name = #{record.fileName,jdbcType=VARCHAR},
			</if>
			<if test="record.sourceType != null">
				source_type = #{record.sourceType,jdbcType=VARCHAR},
			</if>
			<if test="record.size != null">
				size = #{record.size,jdbcType=INTEGER},
			</if>
			<if test="record.lineNumber != null">
				line_number = #{record.lineNumber,jdbcType=INTEGER},
			</if>
			<if test="record.issueId != null">
				issue_id = #{record.issueId,jdbcType=VARCHAR},
			</if>
			<if test="record.uploadTime != null">
				upload_time = #{record.uploadTime,jdbcType=TIMESTAMP},
			</if>
			<if test="record.creator != null">
				creator = #{record.creator,jdbcType=VARCHAR},
			</if>
			<if test="record.content != null">
				content = #{record.content,jdbcType=LONGVARBINARY},
			</if>
		</set>
		<if test="_parameter != null">
			<include refid="Update_By_Example_Where_Clause" />
		</if>
	</update>
	<update id="updateByExampleWithBLOBs" parameterType="map">
		update file
		set file_id = #{record.fileId,jdbcType=VARCHAR},
		file_name =
		#{record.fileName,jdbcType=VARCHAR},
		source_type =
		#{record.sourceType,jdbcType=VARCHAR},
		size =
		#{record.size,jdbcType=INTEGER},
		line_number =
		#{record.lineNumber,jdbcType=INTEGER},
		issue_id =
		#{record.issueId,jdbcType=VARCHAR},
		upload_time =
		#{record.uploadTime,jdbcType=TIMESTAMP},
		creator =
		#{record.creator,jdbcType=VARCHAR},
		content =
		#{record.content,jdbcType=LONGVARBINARY}
		<if test="_parameter != null">
			<include refid="Update_By_Example_Where_Clause" />
		</if>
	</update>
	<update id="updateByExample" parameterType="map">
		update file
		set file_id = #{record.fileId,jdbcType=VARCHAR},
		file_name =
		#{record.fileName,jdbcType=VARCHAR},
		source_type =
		#{record.sourceType,jdbcType=VARCHAR},
		size =
		#{record.size,jdbcType=INTEGER},
		line_number =
		#{record.lineNumber,jdbcType=INTEGER},
		issue_id =
		#{record.issueId,jdbcType=VARCHAR},
		upload_time =
		#{record.uploadTime,jdbcType=TIMESTAMP},
		creator =
		#{record.creator,jdbcType=VARCHAR}
		<if test="_parameter != null">
			<include refid="Update_By_Example_Where_Clause" />
		</if>
	</update>
	<update id="updateByPrimaryKeySelective" parameterType="com.hust.mining.model.IssueFile">
		update file
		<set>
			<if test="fileName != null">
				file_name = #{fileName,jdbcType=VARCHAR},
			</if>
			<if test="sourceType != null">
				source_type = #{sourceType,jdbcType=VARCHAR},
			</if>
			<if test="size != null">
				size = #{size,jdbcType=INTEGER},
			</if>
			<if test="lineNumber != null">
				line_number = #{lineNumber,jdbcType=INTEGER},
			</if>
			<if test="issueId != null">
				issue_id = #{issueId,jdbcType=VARCHAR},
			</if>
			<if test="uploadTime != null">
				upload_time = #{uploadTime,jdbcType=TIMESTAMP},
			</if>
			<if test="creator != null">
				creator = #{creator,jdbcType=VARCHAR},
			</if>
			<if test="content != null">
				content = #{content,jdbcType=LONGVARBINARY},
			</if>
		</set>
		where file_id = #{fileId,jdbcType=VARCHAR}
	</update>
	<update id="updateByPrimaryKeyWithBLOBs" parameterType="com.hust.mining.model.IssueFile">
		update
		file
		set file_name = #{fileName,jdbcType=VARCHAR},
		source_type =
		#{sourceType,jdbcType=VARCHAR},
		size = #{size,jdbcType=INTEGER},
		line_number = #{lineNumber,jdbcType=INTEGER},
		issue_id =
		#{issueId,jdbcType=VARCHAR},
		upload_time =
		#{uploadTime,jdbcType=TIMESTAMP},
		creator =
		#{creator,jdbcType=VARCHAR},
		content =
		#{content,jdbcType=LONGVARBINARY}
		where file_id =
		#{fileId,jdbcType=VARCHAR}
	</update>
	<update id="updateByPrimaryKey" parameterType="com.hust.mining.model.IssueFile">
		update file
		set
		file_name = #{fileName,jdbcType=VARCHAR},
		source_type =
		#{sourceType,jdbcType=VARCHAR},
		size = #{size,jdbcType=INTEGER},
		line_number = #{lineNumber,jdbcType=INTEGER},
		issue_id =
		#{issueId,jdbcType=VARCHAR},
		upload_time =
		#{uploadTime,jdbcType=TIMESTAMP},
		creator = #{creator,jdbcType=VARCHAR}
		where file_id = #{fileId,jdbcType=VARCHAR}
	</update>
</mapper>